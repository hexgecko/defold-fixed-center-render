local LOGICAL_WIDTH = sys.get_config("display.width")
local LOGICAL_HEIGHT = sys.get_config("display.height")

local CLICK = hash("click")
local SCREEN_RESIZED = hash("screen_resized")
local SUBSCRIBE_CLICK = hash("subscribe_click")
local UNSUBSCRIBE_CLICK = hash("unsubscribe_click")

function init(self)
	msg.post("@render:", "subscribe_screen_resized")
	msg.post(".", "acquire_input_focus")
	self.click_subscription = {}
end

function final(self)
	msg.post("@render:", "unsubscribe_screen_resized")
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == SCREEN_RESIZED then
		self.inv_proj_view_matrix = message.inv_proj_view_matrix
	elseif message_id == SUBSCRIBE_CLICK then
		self.click_subscription[sender] = true
	elseif message_id == UNSUBSCRIBE_CLICK then
		self.click_subscription[sender] = nil
	end
end

function on_input(self, action_id, action)
	if action_id == CLICK and action.pressed then
		local inv = self.inv_proj_view_matrix
		if inv ~= nil then
			local x = (2 * action.x / LOGICAL_WIDTH) - 1
			local y = (2 * action.y / LOGICAL_HEIGHT) - 1
			local sx = x * inv.m00 + y * inv.m01 + inv.m03
			local sy = x * inv.m10 + y * inv.m11 + inv.m13
			for url,_ in pairs(self.click_subscription) do
				msg.post(url, CLICK, { x = sx, y = sy })
			end
		end
		return true;
	end
end
